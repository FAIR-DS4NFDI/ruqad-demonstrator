#
# This file is a part of the CaosDB Project.
#
# Copyright (C) 2018 Research Group Biomedical Physics,
# Max-Planck-Institute for Dynamics and Self-Organization Göttingen
# Copyright (C) 2019 Henrik tom Wörden
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.

variables:
  CI_REGISTRY_IMAGE: $CI_REGISTRY/caosdb/customers/f-fit/ruqad/ruqad-demonstrator-fair-ds:$CI_COMMIT_REF_NAME
  # Taken from: https://forum.gitlab.com/t/clarification/54346
  GITLAB_FEATURES: "$GITLAB_FEATURES,dependency_scanning"

stages:
  - info
  - setup
  - style
  - code-analysis
  - test
  - deploy


# TEMPLATES ==========================================================
include:
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml


.env: &env
  - echo "Pipeline triggered by $TRIGGERED_BY_REPO@$TRIGGERED_BY_REF ($TRIGGERED_BY_HASH)"
  - echo "CI_REGISTRY_IMAGE = $CI_REGISTRY_IMAGE"
  - echo "CI_COMMIT_REF_NAME = $CI_COMMIT_REF_NAME"
  - ls -lah /image-cache/

info:
  tags: [cached-dind]
  image: docker:20.10
  stage: info
  needs: []
  script:
    - *env

e2e_tests:
  tags: [cached-dind]
  stage: test
  image: $CI_REGISTRY_IMAGE
  #image: python:3.13
  script:
    - echo $KADITOKEN
    - python -m pytest end-to-end-tests/test_kadi.py

build-testenv:
  tags: [cached-dind]
  image: docker:20.10
  stage: setup
  timeout: 2h
  # rules:
  #  - if: $CI_PIPELINE_SOURCE == "push"
  #  - if: $CI_PIPELINE_SOURCE == "schedule"
  #  - if: $CI_PIPELINE_SOURCE == "web"
  needs: []
  script:
      - df -h
      - command -v wget
      - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        # use here general latest or specific branch latest...
      - |-
        echo > qualitycheck_config.toml << EOF
        s3_endpoint = "https://s3.computational.bio.uni-giessen.de"
        s3_bucket = "ruqad"
        EOF
      - docker build
        --file docker/Dockerfile
        -t $CI_REGISTRY_IMAGE .
      - docker push $CI_REGISTRY_IMAGE

code-style:
  tags: [docker]
  stage: style
  image: $CI_REGISTRY_IMAGE
  needs: [build-testenv]
  allow_failure: true
  script:
      - autopep8 -r --diff --exit-code .

pylint:
  tags: [docker]
  stage: style
  image: $CI_REGISTRY_IMAGE
  needs: [build-testenv]
  allow_failure: true
  script:
      - pylint --unsafe-load-any-extension=y -d all -e E,F src/ruqad

# SAST/SCA: Everything else is configured in the templates.  This is only necessary so that the job
# finds a matching runner and is run in the correct stage.

# SAST: Static Application Security Testing
sast:
  tags: [docker]
  needs: [info]
  stage: code-analysis

# Dependency scanning and vulnerabilities (SCA, Software Composition Analysis)
gemnasium-python-dependency_scanning:
  tags: [docker]
  needs: [info]
  stage: code-analysis

unittest_py3.9:
  tags: [cached-dind]
  needs: [build-testenv]
  stage: test
  image: python:3.9
  script: &python_test_script
    # TODO Remove this manual crawler installation after the crawler has been released in version 0.10.2
    - pip install --root-user-action=ignore git+https://gitlab.indiscale.com/caosdb/src/caosdb-crawler.git@dev
    - pip install .[all]
    # actual test
    - pytest --cov=ruqad -vv ./unittests

unittest_py3.10:
  tags: [cached-dind]
  needs:[build-testenv]
  stage: test
  image: python:3.10
  script: *python_test_script

unittest_py3.11:
  tags: [cached-dind]
  needs:[build-testenv]
  stage: test
  image: python:3.11
  script: *python_test_script

unittest_py3.12:
  tags: [cached-dind]
  needs:[build-testenv]
  stage: test
  image: python:3.12
  script: *python_test_script

unittest_py3.13:
  tags: [cached-dind]
  needs:[build-testenv]
  stage: test
  image: python:3.13
  script: *python_test_script
